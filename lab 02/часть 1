using System;
using System.Collections.Generic;
using System.Data.SqlTypes;
using System.Linq;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;
/*Создайте класс, представляющий учебный класс ClassRoom.
Создайте класс ученик - Pupil. 
В теле класса создайте методы void Study(), void Read(), void Write(), void Relax().
Создайте 3 производных класса ExcelentPupil, GoodPupil, BadPupil от класса базового класса Pupil и переопределите каждый из методов, 
в зависимости от успеваемости ученика (реализация может быть произвольной, например простой вывод на консоль разных строк).
Конструктор класса ClassRoom принимает аргументы типа Pupil, класс должен состоять из 4 учеников.
Предусмотрите возможность того, что пользователь может передать 2 или 3 аргумента.
Выведите информацию о том, как все ученики экземпляра класса ClassRoom умеют учиться, читать, писать, отдыхать. 

Примечание: при реализации возможности создания экземпляра класса ClassRoom с произвольным количеством учеников воспользуйтесь ключевым словом params.
*/
namespace laba_2._1
{
    public class Pupil
    {
        public string name { get; set; }
        public string studying { get; set; }
        public string reading { get; set; }
        public string writing { get; set; }
        public string relaxing { get; set; }

        public Pupil(string name, string studying, string reading, string writing, string relaxing)
        {
            this.name = name;
            this.studying = studying;
            this.reading = reading;
            this.writing = writing;
            this.relaxing = relaxing;
        }

        public void Study()
        {
            Console.WriteLine($"{name} учится {studying}");
        }
        public void Read()
        {
            Console.WriteLine($"{name} читает {reading}");
        }
        public void Write()
        {
            Console.WriteLine($"{name} пишет {writing}");
        }
        public void Relax()
        {
            Console.WriteLine($"{name} отдыхает {relaxing}");
        }
    }

    public class ExcellentPupil : Pupil
    {
        public ExcellentPupil(string name, string studying, string reading, string writing, string relaxing) : base(name, studying, reading, writing, relaxing)
        {
            studying = "Excellent";
        }
    }

    public class GoodPupil : Pupil
    {
        public GoodPupil(string name, string studying, string reading, string writing, string relaxing) : base(name, studying, reading, writing, relaxing)
        {
            studying = "Good";
        }
    }

    public class BadPupil : Pupil
    {
        public BadPupil(string name, string studying, string reading, string writing, string relaxing) : base(name, studying, reading, writing, relaxing)
        {
            studying = "Bad";
        }
    }

    public class ClassRoom
    {
        private List<Pupil> pupils;

        public ClassRoom(params Pupil[] kids)
        {
            pupils = new List<Pupil>(kids);
        }

        public void statistica()
        {
            foreach (Pupil pupil in pupils)
            {
                Console.WriteLine($"Ученик: {pupil.name}");
                pupil.Study();
                pupil.Read();
                pupil.Write();
                pupil.Relax();
            }
        }
    }

    internal class Program
    {
        static void Main(string[] args)
        {
            List<Pupil> pupils = new List<Pupil>();

            Console.WriteLine("Сколько учеников будет?");
            int number = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < number; i++)
            {
                Console.WriteLine($"\nученик номер {i + 1} ");
                Console.Write($"\nимя ");
                string data1 = Console.ReadLine();
                Console.Write($"успеваемость ");
                string data5 = Console.ReadLine();
                Console.Write($"\nнавыки чтения ");
                string data3 = Console.ReadLine();
                Console.Write($"\nнавыки письма ");
                string data4 = Console.ReadLine();
                Console.Write($"\nкак отдыхает ");
                string data2 = Console.ReadLine();

                Pupil pupil;

                if (data5 == "Excellent")
                {
                    pupil = new ExcellentPupil(data1, data5, data3, data4, data2);
                }
                else if (data5 == "Good")
                {
                    pupil = new GoodPupil(data1, data5, data3, data4, data2);
                }
                else
                {
                    pupil = new BadPupil(data1, data5, data3, data4, data2);
                }

                pupils.Add(pupil);
            }

            ClassRoom room = new ClassRoom(pupils.ToArray());
            room.statistica();
        }
    }
}
